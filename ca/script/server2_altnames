#!/bin/bash
#
# https://security.stackexchange.com/questions/74345/provide-subjectaltname-to-openssl-directly-on-the-command-line
# http://openssl.6102.n7.nabble.com/cmd-line-and-subjectAltName-td47538.html#a47548

set -x
set -e

#********************************************
# PARAMETERS
#********************************************

# Dir of the CA
CA_DIR="$HOME/ca-mmbros/ca1"

BASENAME='server2'

# Subject of the cert file
SUBJ="/C=US/ST=CA/O=Acme, Inc./CN=example.com"

#********************************************
# CONSTANTS
#********************************************

cnffile='openssl.cnf'
keyfile="private/${BASENAME}.key.pem"
csrfile="csr/${BASENAME}.csr.pem"
certfile="certs/${BASENAME}.cert.pem"
cafile="certs/ca-chain.cert.pem"


#********************************************
# COMMANDS
#********************************************


# cd into CA folder
cd "${CA_DIR}"


# remove old files
rm -f "${keyfile}" "${csrfile}" "${certfile}"


# create key
openssl genpkey \
	-algorithm RSA \
	-out "${keyfile}" \
	-pkeyopt rsa_keygen_bits:2048
chmod 400 "${keyfile}"


# create certificate signing request (CSR)
openssl req  \
	-key "${keyfile}" \
	-new \
	-sha256 \
	-subj "${SUBJ}" \
	-reqexts "SAN" \
	-config <(cat "${cnffile}" \
		    <(printf "\n[SAN]\nsubjectAltName=DNS:example.com,DNS:*.example.com,DNS:mananno.it,DNS:mananno.com")) \
	-out "${csrfile}"


# create certificate
	#-config "${cnffile}" \
# -extensions "server_cert" \
openssl ca \
	-config <(cat "${cnffile}" \
		    <(printf "\n[SAN]\nsubjectAltName=DNS:example.com,DNS:*.example.com,DNS:mananno.it,DNS:mananno.com")) \
	-extensions "server_cert" \
	-extensions "SAN" \
	-days 375 \
	-notext \
	-md sha256 \
	-in "${csrfile}" \
	-out "${certfile}"
chmod 444 "${certfile}"


# verify cert
openssl x509 -noout -text -in "${certfile}"
openssl verify -CAfile "${cafile}" "${certfile}"

